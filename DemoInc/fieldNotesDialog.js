(()=>{"use strict";var t={2203:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SettingsFactory=void 0;class i{static GetEmptyFieldNotesSettings(){return{Notes:[],IncludeDate:!0}}}e.SettingsFactory=i,i.fieldNotesSettingsKey="DemoIncFieldNotesSettings"}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var a=e[s]={exports:{}};return t[s](a,a.exports,i),a.exports}(()=>{const t=i(2203);(async e=>{class i{}i.CancelButton="#cancelButton",i.OkButton="#okButton",i.IncludeDateCb="#includeDateCb";class s{}s.Click="click",s.Checked="checked",console.log("Initializing FieldNotesDialog."),await(new class{constructor(){}async initialize(){await tableau.extensions.initializeDialogAsync(),e(i.OkButton).on(s.Click,this.okButtonClicked.bind(this)),e(i.CancelButton).on(s.Click,this.cancelButtonClicked.bind(this)),this.updateUI()}updateUI(){var n=tableau.extensions.settings.get(t.SettingsFactory.fieldNotesSettingsKey);this.settings=n?JSON.parse(n):t.SettingsFactory.GetEmptyFieldNotesSettings(),e(i.IncludeDateCb).prop(s.Checked,this.settings.IncludeDate)}async okButtonClicked(){var n=e(i.IncludeDateCb).is(`:${s.Checked}`);this.settings.IncludeDate=n;var a=JSON.stringify(this.settings);tableau.extensions.settings.set(t.SettingsFactory.fieldNotesSettingsKey,a),await tableau.extensions.settings.saveAsync(),tableau.extensions.ui.closeDialog()}cancelButtonClicked(){tableau.extensions.ui.closeDialog()}}).initialize()})(jQuery)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJwYWNrLWRlbW8vLi9zcmMvRGVtb0luYy9GaWVsZE5vdGVzU2hhcmVkLnRzIiwid2VicGFjazovL3dlYnBhY2stZGVtby93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJwYWNrLWRlbW8vLi9zcmMvRGVtb0luYy9GaWVsZE5vdGVzRGlhbG9nLnRzIl0sIm5hbWVzIjpbIlNldHRpbmdzRmFjdG9yeSIsIk5vdGVzIiwiSW5jbHVkZURhdGUiLCJmaWVsZE5vdGVzU2V0dGluZ3NLZXkiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIiQiLCJJZCIsIkNhbmNlbEJ1dHRvbiIsIk9rQnV0dG9uIiwiSW5jbHVkZURhdGVDYiIsIkUiLCJDbGljayIsIkNoZWNrZWQiLCJjb25zb2xlIiwibG9nIiwidGFibGVhdSIsImV4dGVuc2lvbnMiLCJpbml0aWFsaXplRGlhbG9nQXN5bmMiLCJvbiIsInRoaXMiLCJva0J1dHRvbkNsaWNrZWQiLCJiaW5kIiwiY2FuY2VsQnV0dG9uQ2xpY2tlZCIsInVwZGF0ZVVJIiwianNvbiIsInNldHRpbmdzIiwiZ2V0IiwiSlNPTiIsInBhcnNlIiwiR2V0RW1wdHlGaWVsZE5vdGVzU2V0dGluZ3MiLCJwcm9wIiwiY2hlY2tlZCIsImlzIiwidXBkYXRlZEpzb24iLCJzdHJpbmdpZnkiLCJzZXQiLCJzYXZlQXN5bmMiLCJ1aSIsImNsb3NlRGlhbG9nIiwiaW5pdGlhbGl6ZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6ImlIQVdBLE1BQWFBLEVBRUYsb0NBQ0gsTUFBTyxDQUFFQyxNQUFPLEdBQUlDLGFBQWEsSUFIekMsb0JBTTJCLEVBQUFDLHNCQUF3Qiw4QkNoQi9DQyxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhRSxRQUdyQixJQUFJQyxFQUFTTixFQUF5QkUsR0FBWSxDQUdqREcsUUFBUyxJQU9WLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsUSxNQ3JCZixnQkFFQSxPQUFRRyxJQUVKLE1BQU1DLEdBQ1ksRUFBQUMsYUFBdUIsZ0JBQ3ZCLEVBQUFDLFNBQW1CLFlBQ25CLEVBQUFDLGNBQXdCLGlCQUcxQyxNQUFNQyxHQUNZLEVBQUFDLE1BQWdCLFFBQ2hCLEVBQUFDLFFBQWtCLFVBMENwQ0MsUUFBUUMsSUFBSSx3Q0FDTixJQXhDTixNQUlJLGVBRU8seUJBRUdDLFFBQVFDLFdBQVdDLHdCQUd6QlosRUFBRUMsRUFBR0UsVUFBVVUsR0FBR1IsRUFBRUMsTUFBT1EsS0FBS0MsZ0JBQWdCQyxLQUFLRixPQUNyRGQsRUFBRUMsRUFBR0MsY0FBY1csR0FBR1IsRUFBRUMsTUFBT1EsS0FBS0csb0JBQW9CRCxLQUFLRixPQUM3REEsS0FBS0ksV0FHRCxXQUNKLElBQUlDLEVBQU9ULFFBQVFDLFdBQVdTLFNBQVNDLElBQUksRUFBQWpDLGdCQUFnQkcsdUJBQzNEdUIsS0FBS00sU0FBV0QsRUFBNEJHLEtBQUtDLE1BQU1KLEdBQVEsRUFBQS9CLGdCQUFnQm9DLDZCQUMvRXhCLEVBQUVDLEVBQUdHLGVBQWVxQixLQUFLcEIsRUFBRUUsUUFBU08sS0FBS00sU0FBUzlCLGFBRzlDLHdCQUdKLElBQUlvQyxFQUFVMUIsRUFBRUMsRUFBR0csZUFBZXVCLEdBQUcsSUFBSXRCLEVBQUVFLFdBQzNDTyxLQUFLTSxTQUFTOUIsWUFBY29DLEVBQzVCLElBQUlFLEVBQWNOLEtBQUtPLFVBQVVmLEtBQUtNLFVBQ3RDVixRQUFRQyxXQUFXUyxTQUFTVSxJQUFJLEVBQUExQyxnQkFBZ0JHLHNCQUF1QnFDLFNBQ2pFbEIsUUFBUUMsV0FBV1MsU0FBU1csWUFFbENyQixRQUFRQyxXQUFXcUIsR0FBR0MsY0FHbEIsc0JBQ0p2QixRQUFRQyxXQUFXcUIsR0FBR0MsaUJBS0RDLGNBckRqQyxDQXVER0MsUyIsImZpbGUiOiJmaWVsZE5vdGVzRGlhbG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJRmllbGROb3RlU2V0dGluZyB7XHJcbiAgICBGaWVsZE5hbWU6IHN0cmluZztcclxuICAgIEZpZWxkTm90ZTogc3RyaW5nO1xyXG4gICAgRGF0ZTogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWVsZE5vdGVzU2V0dGluZ3Mge1xyXG4gICAgTm90ZXM6IElGaWVsZE5vdGVTZXR0aW5nW107XHJcbiAgICBJbmNsdWRlRGF0ZTogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNldHRpbmdzRmFjdG9yeSB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBHZXRFbXB0eUZpZWxkTm90ZXNTZXR0aW5ncygpOiBJRmllbGROb3Rlc1NldHRpbmdzIHtcclxuICAgICAgICByZXR1cm4geyBOb3RlczogW10sIEluY2x1ZGVEYXRlOiB0cnVlIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBmaWVsZE5vdGVzU2V0dGluZ3NLZXkgPSAnRGVtb0luY0ZpZWxkTm90ZXNTZXR0aW5ncyc7XHJcbn1cclxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsImltcG9ydCB7IElGaWVsZE5vdGVzU2V0dGluZ3MsIFNldHRpbmdzRmFjdG9yeSB9IGZyb20gJy4uL0RlbW9JbmMvRmllbGROb3Rlc1NoYXJlZCdcclxuXHJcbihhc3luYyAoJCkgPT4ge1xyXG5cclxuICAgIGNsYXNzIElkIHtcclxuICAgICAgICBwdWJsaWMgc3RhdGljIENhbmNlbEJ1dHRvbjogc3RyaW5nID0gJyNjYW5jZWxCdXR0b24nO1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgT2tCdXR0b246IHN0cmluZyA9ICcjb2tCdXR0b24nO1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgSW5jbHVkZURhdGVDYjogc3RyaW5nID0gJyNpbmNsdWRlRGF0ZUNiJztcclxuICAgIH1cclxuXHJcbiAgICBjbGFzcyBFIHtcclxuICAgICAgICBwdWJsaWMgc3RhdGljIENsaWNrOiBzdHJpbmcgPSAnY2xpY2snO1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgQ2hlY2tlZDogc3RyaW5nID0gJ2NoZWNrZWQnO1xyXG4gICAgfVxyXG5cclxuICAgIGNsYXNzIEZpZWxkTm90ZXNEaWFsb2cge1xyXG5cclxuICAgICAgICBwcml2YXRlIHNldHRpbmdzOiBJRmllbGROb3Rlc1NldHRpbmdzO1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgICAgICBwdWJsaWMgYXN5bmMgaW5pdGlhbGl6ZSgpIHtcclxuXHJcbiAgICAgICAgICAgIGF3YWl0IHRhYmxlYXUuZXh0ZW5zaW9ucy5pbml0aWFsaXplRGlhbG9nQXN5bmMoKTtcclxuXHJcbiAgICAgICAgICAgIC8vaW5pdGlhbGl6ZSB0aGUgdWlcclxuICAgICAgICAgICAgJChJZC5Pa0J1dHRvbikub24oRS5DbGljaywgdGhpcy5va0J1dHRvbkNsaWNrZWQuYmluZCh0aGlzKSlcclxuICAgICAgICAgICAgJChJZC5DYW5jZWxCdXR0b24pLm9uKEUuQ2xpY2ssIHRoaXMuY2FuY2VsQnV0dG9uQ2xpY2tlZC5iaW5kKHRoaXMpKVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHVwZGF0ZVVJKCkge1xyXG4gICAgICAgICAgICB2YXIganNvbiA9IHRhYmxlYXUuZXh0ZW5zaW9ucy5zZXR0aW5ncy5nZXQoU2V0dGluZ3NGYWN0b3J5LmZpZWxkTm90ZXNTZXR0aW5nc0tleSk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MgPSBqc29uID8gPElGaWVsZE5vdGVzU2V0dGluZ3M+SlNPTi5wYXJzZShqc29uKSA6IFNldHRpbmdzRmFjdG9yeS5HZXRFbXB0eUZpZWxkTm90ZXNTZXR0aW5ncygpO1xyXG4gICAgICAgICAgICAkKElkLkluY2x1ZGVEYXRlQ2IpLnByb3AoRS5DaGVja2VkLCB0aGlzLnNldHRpbmdzLkluY2x1ZGVEYXRlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgYXN5bmMgb2tCdXR0b25DbGlja2VkKCkge1xyXG5cclxuICAgICAgICAgICAgLy91cGRhdGUgdGhlIHNldHRpbmdzICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciBjaGVja2VkID0gJChJZC5JbmNsdWRlRGF0ZUNiKS5pcyhgOiR7RS5DaGVja2VkfWApO1xyXG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLkluY2x1ZGVEYXRlID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZWRKc29uID0gSlNPTi5zdHJpbmdpZnkodGhpcy5zZXR0aW5ncyk7XHJcbiAgICAgICAgICAgIHRhYmxlYXUuZXh0ZW5zaW9ucy5zZXR0aW5ncy5zZXQoU2V0dGluZ3NGYWN0b3J5LmZpZWxkTm90ZXNTZXR0aW5nc0tleSwgdXBkYXRlZEpzb24pO1xyXG4gICAgICAgICAgICBhd2FpdCB0YWJsZWF1LmV4dGVuc2lvbnMuc2V0dGluZ3Muc2F2ZUFzeW5jKCk7XHJcblxyXG4gICAgICAgICAgICB0YWJsZWF1LmV4dGVuc2lvbnMudWkuY2xvc2VEaWFsb2coKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgY2FuY2VsQnV0dG9uQ2xpY2tlZCgpIHtcclxuICAgICAgICAgICAgdGFibGVhdS5leHRlbnNpb25zLnVpLmNsb3NlRGlhbG9nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdJbml0aWFsaXppbmcgRmllbGROb3Rlc0RpYWxvZy4nKVxyXG4gICAgYXdhaXQgbmV3IEZpZWxkTm90ZXNEaWFsb2coKS5pbml0aWFsaXplKCk7XHJcblxyXG59KShqUXVlcnkpOyJdLCJzb3VyY2VSb290IjoiIn0=